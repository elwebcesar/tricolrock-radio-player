/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var t={727:()=>{function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,s(r.key),r)}}function e(t,n){return e=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},e(t,n)}function n(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function r(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(t){}return(r=function(){return!!t})()}function o(t){return o=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},o(t)}function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach(function(e){u(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function u(t,e,n){return(e=s(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(t){var e=function(t){if("object"!=i(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==i(e)?e:e+""}!function(){"use strict";var a=Object.freeze({left:0,top:0,width:16,height:16}),s=Object.freeze({rotate:0,vFlip:!1,hFlip:!1}),f=Object.freeze(c(c({},a),s)),l=Object.freeze(c(c({},f),{},{body:"",hidden:!1})),p=Object.freeze({width:null,height:null}),d=Object.freeze(c(c({},p),s)),v=/[\s,]+/,h=c(c({},d),{},{preserveAspectRatio:""});function y(t){var e,n=c({},h),r=function(e,n){return t.getAttribute(e)||n};return n.width=r("width",null),n.height=r("height",null),n.rotate=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=t.replace(/^-?[0-9.]*/,"");function r(t){for(;t<0;)t+=4;return t%4}if(""===n){var o=parseInt(t);return isNaN(o)?0:r(o)}if(n!==t){var i=0;switch(n){case"%":i=25;break;case"deg":i=90}if(i){var a=parseFloat(t.slice(0,t.length-n.length));return isNaN(a)?0:(a/=i)%1==0?r(a):0}}return e}(r("rotate","")),e=n,r("flip","").split(v).forEach(function(t){switch(t.trim()){case"horizontal":e.hFlip=!0;break;case"vertical":e.vFlip=!0}}),n.preserveAspectRatio=r("preserveAspectRatio",r("preserveaspectratio","")),n}var m=/^[a-z0-9]+(-[a-z0-9]+)*$/,g=function(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",o=t.split(":");if("@"===t.slice(0,1)){if(o.length<2||o.length>3)return null;r=o.shift().slice(1)}if(o.length>3||!o.length)return null;if(o.length>1){var i=o.pop(),a=o.pop(),c={provider:o.length>0?o[0]:r,prefix:a,name:i};return e&&!b(c)?null:c}var u=o[0],s=u.split("-");if(s.length>1){var f={provider:r,prefix:s.shift(),name:s.join("-")};return e&&!b(f)?null:f}if(n&&""===r){var l={provider:r,prefix:"",name:u};return e&&!b(l,n)?null:l}return null},b=function(t,e){return!!t&&!(""!==t.provider&&!t.provider.match(m)||!(e&&""===t.prefix||t.prefix.match(m))||!t.name.match(m))};function w(t,e){var n=function(t,e){var n={};!t.hFlip!=!e.hFlip&&(n.hFlip=!0),!t.vFlip!=!e.vFlip&&(n.vFlip=!0);var r=((t.rotate||0)+(e.rotate||0))%4;return r&&(n.rotate=r),n}(t,e);for(var r in l)r in s?r in t&&!(r in n)&&(n[r]=s[r]):r in e?n[r]=e[r]:r in t&&(n[r]=t[r]);return n}function x(t,e,n){var r=t.icons,o=t.aliases||Object.create(null),i={};function a(t){i=w(r[t]||o[t],i)}return a(e),n.forEach(a),w(t,i)}function S(t,e){var n=[];if("object"!=i(t)||"object"!=i(t.icons))return n;t.not_found instanceof Array&&t.not_found.forEach(function(t){e(t,null),n.push(t)});var r=function(t){var e=t.icons,n=t.aliases||Object.create(null),r=Object.create(null);return Object.keys(e).concat(Object.keys(n)).forEach(function t(o){if(e[o])return r[o]=[];if(!(o in r)){r[o]=null;var i=n[o]&&n[o].parent,a=i&&t(i);a&&(r[o]=[i].concat(a))}return r[o]}),r}(t);for(var o in r){var a=r[o];a&&(e(o,x(t,o,a)),n.push(o))}return n}var O=c({provider:"",aliases:{},not_found:{}},a);function k(t,e){for(var n in e)if(n in t&&i(t[n])!=i(e[n]))return!1;return!0}function j(t){if("object"!=i(t)||null===t)return null;var e=t;if("string"!=typeof e.prefix||!t.icons||"object"!=i(t.icons))return null;if(!k(t,O))return null;var n=e.icons;for(var r in n){var o=n[r];if(!r.match(m)||"string"!=typeof o.body||!k(o,l))return null}var a=e.aliases||Object.create(null);for(var c in a){var u=a[c],s=u.parent;if(!c.match(m)||"string"!=typeof s||!n[s]&&!a[s]||!k(u,l))return null}return e}var _=Object.create(null);function E(t,e){var n=_[t]||(_[t]=Object.create(null));return n[e]||(n[e]=function(t,e){return{provider:t,prefix:e,icons:Object.create(null),missing:new Set}}(t,e))}function A(t,e){return j(e)?S(e,function(e,n){n?t.icons[e]=n:t.missing.add(e)}):[]}function C(t,e){var n=[];return("string"==typeof t?[t]:Object.keys(_)).forEach(function(t){("string"==typeof t&&"string"==typeof e?[e]:Object.keys(_[t]||{})).forEach(function(e){var r=E(t,e);n=n.concat(Object.keys(r.icons).map(function(n){return(""!==t?"@"+t+":":"")+e+":"+n}))})}),n}var T=!1;function P(t){return"boolean"==typeof t&&(T=t),T}function I(t){var e="string"==typeof t?g(t,!0,T):t;if(e){var n=E(e.provider,e.prefix),r=e.name;return n.icons[r]||(n.missing.has(r)?null:void 0)}}function L(t,e){var n=g(t,!0,T);return!!n&&function(t,e,n){try{if("string"==typeof n.body)return t.icons[e]=c({},n),!0}catch(t){}return!1}(E(n.provider,n.prefix),n.name,e)}function N(t,e){if("object"!=i(t))return!1;if("string"!=typeof e&&(e=t.provider||""),T&&!e&&!t.prefix){var n=!1;return j(t)&&(t.prefix="",S(t,function(t,e){e&&L(t,e)&&(n=!0)})),n}var r=t.prefix;return!!b({provider:e,prefix:r,name:"a"})&&!!A(E(e,r),t)}function F(t){return!!I(t)}function R(t){var e=I(t);return e?c(c({},f),e):null}function G(t,e){t.forEach(function(t){var n=t.loaderCallbacks;n&&(t.loaderCallbacks=n.filter(function(t){return t.id!==e}))})}var M=0,D=Object.create(null);function B(t,e){D[t]=e}function U(t){return D[t]||D[""]}var q={resources:[],index:0,timeout:2e3,rotate:750,random:!1,dataAfterTimeout:!1};function z(t){var e=c(c({},q),t),n=[];function r(){n=n.filter(function(t){return"pending"===t().status})}return{query:function(t,o,i){var a=function(t,e,n,r){var o,i=t.resources.length,a=t.random?Math.floor(Math.random()*i):t.index;if(t.random){var c=t.resources.slice(0);for(o=[];c.length>1;){var u=Math.floor(Math.random()*c.length);o.push(c[u]),c=c.slice(0,u).concat(c.slice(u+1))}o=o.concat(c)}else o=t.resources.slice(a).concat(t.resources.slice(0,a));var s,f=Date.now(),l="pending",p=0,d=null,v=[],h=[];function y(){d&&(clearTimeout(d),d=null)}function m(){"pending"===l&&(l="aborted"),y(),v.forEach(function(t){"pending"===t.status&&(t.status="aborted")}),v=[]}function g(t,e){e&&(h=[]),"function"==typeof t&&h.push(t)}function b(){l="failed",h.forEach(function(t){t(void 0,s)})}function w(){v.forEach(function(t){"pending"===t.status&&(t.status="aborted")}),v=[]}return h.push(r),setTimeout(function r(){if("pending"===l){y();var i=o.shift();if(void 0===i)return v.length?void(d=setTimeout(function(){y(),"pending"===l&&(w(),b())},t.timeout)):void b();var a={status:"pending",resource:i,callback:function(e,n){!function(e,n,i){var a="success"!==n;switch(v=v.filter(function(t){return t!==e}),l){case"pending":break;case"failed":if(a||!t.dataAfterTimeout)return;break;default:return}if("abort"===n)return s=i,void b();if(a)return s=i,void(v.length||(o.length?r():b()));if(y(),w(),!t.random){var c=t.resources.indexOf(e.resource);-1!==c&&c!==t.index&&(t.index=c)}l="completed",h.forEach(function(t){t(i)})}(a,e,n)}};v.push(a),p++,d=setTimeout(r,t.rotate),n(i,e,a.callback)}}),function(){return{startTime:f,payload:e,status:l,queriesSent:p,queriesPending:v.length,subscribe:g,abort:m}}}(e,t,o,function(t,e){r(),i&&i(t,e)});return n.push(a),a},find:function(t){return n.find(function(e){return t(e)})||null},setIndex:function(t){e.index=t},getIndex:function(){return e.index},cleanup:r}}function H(t){var e;if("string"==typeof t.resources)e=[t.resources];else if(!((e=t.resources)instanceof Array&&e.length))return null;return{resources:e,path:t.path||"/",maxURL:t.maxURL||500,rotate:t.rotate||750,timeout:t.timeout||5e3,random:!0===t.random,index:t.index||0,dataAfterTimeout:!1!==t.dataAfterTimeout}}for(var Q=Object.create(null),V=["https://api.simplesvg.com","https://api.unisvg.com"],$=[];V.length>0;)1===V.length||Math.random()>.5?$.push(V.shift()):$.push(V.pop());function J(t,e){var n=H(e);return null!==n&&(Q[t]=n,!0)}function Y(t){return Q[t]}function K(){return Object.keys(Q)}function W(){}Q[""]=H({resources:["https://api.iconify.design"].concat($)});var X=Object.create(null);function Z(t,e,n){var r,o;if("string"==typeof t){var i=U(t);if(!i)return n(void 0,424),W;o=i.send;var a=function(t){if(!X[t]){var e=Y(t);if(!e)return;var n={config:e,redundancy:z(e)};X[t]=n}return X[t]}(t);a&&(r=a.redundancy)}else{var c=H(t);if(c){r=z(c);var u=U(t.resources?t.resources[0]:"");u&&(o=u.send)}}return r&&o?r.query(e,o,n)().abort:(n(void 0,424),W)}var tt="iconify2",et="iconify",nt=et+"-count",rt=et+"-version",ot=36e5;function it(t,e){try{return t.getItem(e)}catch(t){}}function at(t,e,n){try{return t.setItem(e,n),!0}catch(t){}}function ct(t,e){try{t.removeItem(e)}catch(t){}}function ut(t,e){return at(t,nt,e.toString())}function st(t){return parseInt(it(t,nt))||0}var ft={local:!0,session:!0},lt={local:new Set,session:new Set},pt=!1,dt="undefined"==typeof window?{}:window;function vt(t){var e=t+"Storage";try{if(dt&&dt[e]&&"number"==typeof dt[e].length)return dt[e]}catch(t){}ft[t]=!1}function ht(t,e){var n=vt(t);if(n){var r=it(n,rt);if(r!==tt){if(r)for(var o=st(n),a=0;a<o;a++)ct(n,et+a.toString());return at(n,rt,tt),void ut(n,0)}for(var c=Math.floor(Date.now()/ot)-168,u=function(t){var r=et+t.toString(),o=it(n,r);if("string"==typeof o){try{var a=JSON.parse(o);if("object"==i(a)&&"number"==typeof a.cached&&a.cached>c&&"string"==typeof a.provider&&"object"==i(a.data)&&"string"==typeof a.data.prefix&&e(a,t))return!0}catch(t){}ct(n,r)}},s=st(n),f=s-1;f>=0;f--)u(f)||(f===s-1?(s--,ut(n,s)):lt[t].add(f))}}function yt(){if(!pt)for(var t in pt=!0,ft)ht(t,function(t){var e=t.data,n=E(t.provider,e.prefix);if(!A(n,e).length)return!1;var r=e.lastModified||-1;return n.lastModifiedCached=n.lastModifiedCached?Math.min(n.lastModifiedCached,r):r,!0})}function mt(){}var gt=function(t,e){var n=function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=[];return t.forEach(function(t){var o="string"==typeof t?g(t,e,n):t;o&&r.push(o)}),r}(t,!0,P()),r=function(t){var e={loaded:[],missing:[],pending:[]},n=Object.create(null);t.sort(function(t,e){return t.provider!==e.provider?t.provider.localeCompare(e.provider):t.prefix!==e.prefix?t.prefix.localeCompare(e.prefix):t.name.localeCompare(e.name)});var r={provider:"",prefix:"",name:""};return t.forEach(function(t){if(r.name!==t.name||r.prefix!==t.prefix||r.provider!==t.provider){r=t;var o=t.provider,i=t.prefix,a=t.name,c=n[o]||(n[o]=Object.create(null)),u=c[i]||(c[i]=E(o,i)),s={provider:o,prefix:i,name:a};(a in u.icons?e.loaded:""===i||u.missing.has(a)?e.missing:e.pending).push(s)}}),e}(n);if(!r.pending.length){var o=!0;return e&&setTimeout(function(){o&&e(r.loaded,r.missing,r.pending,mt)}),function(){o=!1}}var a,c,u=Object.create(null),s=[];return r.pending.forEach(function(t){var e=t.provider,n=t.prefix;if(n!==c||e!==a){a=e,c=n,s.push(E(e,n));var r=u[e]||(u[e]=Object.create(null));r[n]||(r[n]=[])}}),r.pending.forEach(function(t){var e=t.provider,n=t.prefix,r=t.name,o=E(e,n),i=o.pendingIcons||(o.pendingIcons=new Set);i.has(r)||(i.add(r),u[e][n].push(r))}),s.forEach(function(t){var e=t.provider,n=t.prefix;u[e][n].length&&function(t,e){t.iconsToLoad?t.iconsToLoad=t.iconsToLoad.concat(e).sort():t.iconsToLoad=e,t.iconsQueueFlag||(t.iconsQueueFlag=!0,setTimeout(function(){t.iconsQueueFlag=!1;var e,n=t.provider,r=t.prefix,o=t.iconsToLoad;delete t.iconsToLoad,o&&(e=U(n))&&e.prepare(n,r,o).forEach(function(e){Z(n,e,function(n){if("object"!=i(n))e.icons.forEach(function(e){t.missing.add(e)});else try{var r=A(t,n);if(!r.length)return;var o=t.pendingIcons;o&&r.forEach(function(t){o.delete(t)}),function(t,e){function n(n){var r;if(ft[n]&&(r=vt(n))){var o,i=lt[n];if(i.size)i.delete(o=Array.from(i).shift());else if(!ut(r,(o=st(r))+1))return;var a={cached:Math.floor(Date.now()/ot),provider:t.provider,data:e};return at(r,et+o.toString(),JSON.stringify(a))}}pt||yt(),e.lastModified&&!function(t,e){var n=t.lastModifiedCached;if(n&&n>=e)return n===e;if(t.lastModifiedCached=e,n)for(var r in ft)ht(r,function(n){var r=n.data;return n.provider!==t.provider||r.prefix!==t.prefix||r.lastModified===e});return!0}(t,e.lastModified)||Object.keys(e.icons).length&&(e.not_found&&delete(e=Object.assign({},e)).not_found,n("local")||n("session"))}(t,n)}catch(t){console.error(t)}!function(t){t.iconsLoaderFlag||(t.iconsLoaderFlag=!0,setTimeout(function(){t.iconsLoaderFlag=!1,function(t){t.pendingCallbacksFlag||(t.pendingCallbacksFlag=!0,setTimeout(function(){t.pendingCallbacksFlag=!1;var e=t.loaderCallbacks?t.loaderCallbacks.slice(0):[];if(e.length){var n=!1,r=t.provider,o=t.prefix;e.forEach(function(e){var i=e.icons,a=i.pending.length;i.pending=i.pending.filter(function(e){if(e.prefix!==o)return!0;var a=e.name;if(t.icons[a])i.loaded.push({provider:r,prefix:o,name:a});else{if(!t.missing.has(a))return n=!0,!0;i.missing.push({provider:r,prefix:o,name:a})}return!1}),i.pending.length!==a&&(n||G([t],e.id),e.callback(i.loaded.slice(0),i.missing.slice(0),i.pending.slice(0),e.abort))})}}))}(t)}))}(t)})})}))}(t,u[e][n])}),e?function(t,e,n){var r=M++,o=G.bind(null,n,r);if(!e.pending.length)return o;var i={id:r,icons:e,callback:t,abort:o};return n.forEach(function(t){(t.loaderCallbacks||(t.loaderCallbacks=[])).push(i)}),o}(e,r,s):mt},bt=function(t){return new Promise(function(e,n){var r="string"==typeof t?g(t,!0):t;r?gt([r||t],function(o){if(o.length&&r){var i=I(r);if(i)return void e(c(c({},f),i))}n(t)}):n(t)})};function wt(t){return t.hasAttribute("inline")}var xt=!1;try{xt=0===navigator.vendor.indexOf("Apple")}catch(a){}var St=/(-?[0-9.]*[0-9]+[0-9.]*)/g,Ot=/^-?[0-9.]*[0-9]+[0-9.]*$/g;function kt(t,e,n){if(1===e)return t;if(n=n||100,"number"==typeof t)return Math.ceil(t*e*n)/n;if("string"!=typeof t)return t;var r=t.split(St);if(null===r||!r.length)return t;for(var o=[],i=r.shift(),a=Ot.test(i);;){if(a){var c=parseFloat(i);isNaN(c)?o.push(i):o.push(Math.ceil(c*e*n)/n)}else o.push(i);if(void 0===(i=r.shift()))return o.join("");a=!a}}function jt(t,e){var n=c(c({},f),t),r=c(c({},d),e),o={left:n.left,top:n.top,width:n.width,height:n.height},i=n.body;[n,r].forEach(function(t){var e,n=[],r=t.hFlip,a=t.vFlip,c=t.rotate;switch(r?a?c+=2:(n.push("translate("+(o.width+o.left).toString()+" "+(0-o.top).toString()+")"),n.push("scale(-1 1)"),o.top=o.left=0):a&&(n.push("translate("+(0-o.left).toString()+" "+(o.height+o.top).toString()+")"),n.push("scale(1 -1)"),o.top=o.left=0),c<0&&(c-=4*Math.floor(c/4)),c%=4){case 1:e=o.height/2+o.top,n.unshift("rotate(90 "+e.toString()+" "+e.toString()+")");break;case 2:n.unshift("rotate(180 "+(o.width/2+o.left).toString()+" "+(o.height/2+o.top).toString()+")");break;case 3:e=o.width/2+o.left,n.unshift("rotate(-90 "+e.toString()+" "+e.toString()+")")}c%2==1&&(o.left!==o.top&&(e=o.left,o.left=o.top,o.top=e),o.width!==o.height&&(e=o.width,o.width=o.height,o.height=e)),n.length&&(i='<g transform="'+n.join(" ")+'">'+i+"</g>")});var a,u,s=r.width,l=r.height,p=o.width,v=o.height;null===s?a=kt(u=null===l?"1em":"auto"===l?v:l,p/v):(a="auto"===s?p:s,u=null===l?kt(a,v/p):"auto"===l?v:l);var h={},y=function(t,e){(function(t){return"unset"===t||"undefined"===t||"none"===t})(e)||(h[t]=e.toString())};return y("width",a),y("height",u),h.viewBox=o.left.toString()+" "+o.top.toString()+" "+p.toString()+" "+v.toString(),{attributes:h,body:i}}var _t=function(){var t;try{if("function"==typeof(t=fetch))return t}catch(t){}}();function Et(t){_t=t}function At(){return _t}var Ct={prepare:function(t,e,n){var r=[],o=function(t,e){var n,r=Y(t);if(!r)return 0;if(r.maxURL){var o=0;r.resources.forEach(function(t){var e=t;o=Math.max(o,e.length)});var i=e+".json?icons=";n=r.maxURL-o-r.path.length-i.length}else n=0;return n}(t,e),i="icons",a={type:i,provider:t,prefix:e,icons:[]},c=0;return n.forEach(function(n,u){(c+=n.length+1)>=o&&u>0&&(r.push(a),a={type:i,provider:t,prefix:e,icons:[]},c=n.length),a.icons.push(n)}),r.push(a),r},send:function(t,e,n){if(_t){var r=function(t){if("string"==typeof t){var e=Y(t);if(e)return e.path}return"/"}(e.provider);switch(e.type){case"icons":var o=e.prefix,a=e.icons.join(",");r+=o+".json?"+new URLSearchParams({icons:a}).toString();break;case"custom":var c=e.uri;r+="/"===c.slice(0,1)?c.slice(1):c;break;default:return void n("abort",400)}var u=503;_t(t+r).then(function(t){var e=t.status;if(200===e)return u=501,t.json();setTimeout(function(){n(function(t){return 404===t}(e)?"abort":"next",e)})}).then(function(t){"object"==i(t)&&null!==t?setTimeout(function(){n("success",t)}):setTimeout(function(){404===t?n("abort",t):n("next",u)})}).catch(function(){n("next",u)})}else n("abort",424)}};function Tt(t,e){switch(t){case"local":case"session":ft[t]=e;break;case"all":for(var n in ft)ft[n]=e}}var Pt="data-style",It="";function Lt(t){It=t}function Nt(t,e){var n=Array.from(t.childNodes).find(function(t){return t.hasAttribute&&t.hasAttribute(Pt)});n||((n=document.createElement("style")).setAttribute(Pt,Pt),t.appendChild(n)),n.textContent=":host{display:inline-block;vertical-align:"+(e?"-0.125em":"0")+"}span,svg{display:block}"+It}function Ft(t,e){var n=-1===t.indexOf("xlink:")?"":' xmlns:xlink="http://www.w3.org/1999/xlink"';for(var r in e)n+=" "+r+'="'+e[r]+'"';return'<svg xmlns="http://www.w3.org/2000/svg"'+n+">"+t+"</svg>"}var Rt={"background-color":"currentColor"},Gt={"background-color":"transparent"},Mt={image:"var(--svg)",repeat:"no-repeat",size:"100% 100%"},Dt={"-webkit-mask":Rt,mask:Rt,background:Gt};for(var Bt in Dt){var Ut=Dt[Bt];for(var qt in Mt)Ut[Bt+"-"+qt]=Mt[qt]}function zt(t){return t?t+(t.match(/^[-0-9.]+$/)?"px":""):"inherit"}function Ht(t,e){var n=e.icon.data,r=e.customisations,o=jt(n,r);r.preserveAspectRatio&&(o.attributes.preserveAspectRatio=r.preserveAspectRatio);var i,a=e.renderedMode;i="svg"===a?function(t){var e=document.createElement("span"),n=t.attributes,r="";return n.width||(r="width: inherit;"),n.height||(r+="height: inherit;"),r&&(n.style=r),e.innerHTML=Ft(t.body,n),e.firstChild}(o):function(t,e,n){var r=document.createElement("span"),o=t.body;-1!==o.indexOf("<a")&&(o+="\x3c!-- "+Date.now()+" --\x3e");var i=t.attributes,a='url("data:image/svg+xml,'+function(t){return t.replace(/"/g,"'").replace(/%/g,"%25").replace(/#/g,"%23").replace(/</g,"%3C").replace(/>/g,"%3E").replace(/\s+/g," ")}(Ft(o,c(c({},i),{},{width:e.width+"",height:e.height+""})))+'")',u=r.style,s=c({"--svg":a,width:zt(i.width),height:zt(i.height)},n?Rt:Gt);for(var f in s)u.setProperty(f,s[f]);return r}(o,c(c({},f),n),"mask"===a);var u=Array.from(t.childNodes).find(function(t){var e=t.tagName&&t.tagName.toUpperCase();return"SPAN"===e||"SVG"===e});u?"SPAN"===i.tagName&&u.tagName===i.tagName?u.setAttribute("style",i.getAttribute("style")):t.replaceChild(i,u):t.appendChild(i)}function Qt(t,e,n){return{rendered:!1,inline:e,icon:t,lastRender:n&&(n.rendered?n:n.lastRender)}}!function(){var a,s,f=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"iconify-icon";try{a=window.customElements,s=window.HTMLElement}catch(f){return}if(a&&s){var l=a.get(f);if(l)return l;var p=["icon","mode","inline","width","height","rotate","flip"],d=function(a){!function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(n&&n.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),n&&e(t,n)}(f,a);var s=function(t){var e=r();return function(){var r,a=o(t);if(e){var c=o(this).constructor;r=Reflect.construct(a,arguments,c)}else r=a.apply(this,arguments);return function(t,e){if(e&&("object"==i(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return n(t)}(this,r)}}(f);function f(){var t;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,f),u(n(t=s.call(this)),"_shadowRoot",void 0),u(n(t),"_state",void 0),u(n(t),"_checkQueued",!1);var e=t._shadowRoot=t.attachShadow({mode:"open"}),r=wt(n(t));return Nt(e,r),t._state=Qt({value:""},r),t._queueCheck(),t}return function(e,n,r){n&&t(e.prototype,n),r&&t(e,r),Object.defineProperty(e,"prototype",{writable:!1})}(f,[{key:"attributeChangedCallback",value:function(t){if("inline"===t){var e=wt(this),n=this._state;e!==n.inline&&(n.inline=e,Nt(this._shadowRoot,e))}else this._queueCheck()}},{key:"icon",get:function(){var t=this.getAttribute("icon");if(t&&"{"===t.slice(0,1))try{return JSON.parse(t)}catch(t){}return t},set:function(t){"object"==i(t)&&(t=JSON.stringify(t)),this.setAttribute("icon",t)}},{key:"inline",get:function(){return wt(this)},set:function(t){t?this.setAttribute("inline","true"):this.removeAttribute("inline")}},{key:"restartAnimation",value:function(){var t=this._state;if(t.rendered){var e=this._shadowRoot;if("svg"===t.renderedMode)try{return void e.lastChild.setCurrentTime(0)}catch(t){}Ht(e,t)}}},{key:"status",get:function(){var t=this._state;return t.rendered?"rendered":null===t.icon.data?"failed":"loading"}},{key:"_queueCheck",value:function(){var t=this;this._checkQueued||(this._checkQueued=!0,setTimeout(function(){t._check()}))}},{key:"_check",value:function(){if(this._checkQueued){this._checkQueued=!1;var t=this._state,e=this.getAttribute("icon");if(e===t.icon.value){if(t.rendered){var n=this.getAttribute("mode"),r=y(this);(t.attrMode!==n||function(t,e){for(var n in h)if(t[n]!==e[n])return!0;return!1}(t.customisations,r))&&this._renderIcon(t.icon,r,n)}}else this._iconChanged(e)}}},{key:"_iconChanged",value:function(t){var e=this,n=function(t){var n="string"==typeof t?g(t,!0,!0):null;if(!n){var r=function(t){try{var e="string"==typeof t?JSON.parse(t):t;if("string"==typeof e.body)return c({},e)}catch(t){}}(t);return{value:t,data:r}}var o=I(n);if(void 0!==o||!n.prefix)return{value:t,name:n,data:o};var i=gt([n],function(){return function(t,n,r){var o=e._state;if(!o.rendered&&e.getAttribute("icon")===t){var i={value:t,name:n,data:r};i.data?e._gotIconData(i):o.icon=i}}(t,n,I(n))});return{value:t,name:n,loading:i}}(t);n.data?this._gotIconData(n):this._state=Qt(n,this._state.inline,this._state)}},{key:"_gotIconData",value:function(t){this._checkQueued=!1,this._renderIcon(t,y(this),this.getAttribute("mode"))}},{key:"_renderIcon",value:function(t,e,n){var r=function(t,e){switch(e){case"svg":case"bg":case"mask":return e}return"style"===e||!xt&&-1!==t.indexOf("<a")?-1===t.indexOf("currentColor")?"bg":"mask":"svg"}(t.data.body,n),o=this._state.inline;Ht(this._shadowRoot,this._state={rendered:!0,icon:t,inline:o,customisations:e,attrMode:n,renderedMode:r})}}],[{key:"observedAttributes",get:function(){return p.slice(0)}}]),f}(s);p.forEach(function(t){t in d.prototype||Object.defineProperty(d.prototype,t,{get:function(){return this.getAttribute(t)},set:function(e){null!==e?this.setAttribute(t,e):this.removeAttribute(t)}})});var v=function(){var t;B("",Ct),P(!0);try{t=window}catch(t){}if(t){if(yt(),void 0!==t.IconifyPreload){var e=t.IconifyPreload,n="Invalid IconifyPreload syntax.";"object"==i(e)&&null!==e&&(e instanceof Array?e:[e]).forEach(function(t){try{("object"!=i(t)||null===t||t instanceof Array||"object"!=i(t.icons)||"string"!=typeof t.prefix||!N(t))&&console.error(n)}catch(t){console.error(n)}})}if(void 0!==t.IconifyProviders){var r=t.IconifyProviders;if("object"==i(r)&&null!==r)for(var o in r){var a="IconifyProviders["+o+"] is invalid.";try{var c=r[o];if("object"!=i(c)||!c||void 0===c.resources)continue;J(o,c)||console.error(a)}catch(t){console.error(a)}}}}return{enableCache:function(t){return Tt(t,!0)},disableCache:function(t){return Tt(t,!1)},iconExists:F,getIcon:R,listIcons:C,addIcon:L,addCollection:N,calculateSize:kt,buildIcon:jt,loadIcons:gt,loadIcon:bt,addAPIProvider:J,appendCustomStyle:Lt,_api:{getAPIConfig:Y,setAPIModule:B,sendAPIQuery:Z,setFetch:Et,getFetch:At,listAPIProviders:K}}}();for(var m in v)d[m]=d.prototype[m]=v[m];a.define(f,d)}}()}()}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={exports:{}};return t[r](i,i.exports,n),i.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&(!t||!/^http(s?):/.test(t));)t=r[o--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t+"../"})(),(()=>{"use strict";n(727),n.p,n.p,n.p,n.p,n.p,n.p,n.p,n.p;var t=function(t){return document.getElementById(t)},e={audio:t("audio"),playButton:t("playButton"),volumeSlider:t("volumeSlider"),volumeLabel:t("volumeLabel"),currentCoverArt:t("currentCoverArt"),currentSong:t("currentSong"),currentArtist:t("currentArtist"),radioHeading:t("radio-heading"),onAirIndicator:t("on-air-indicator"),currentStationImage:t("currentStationImage"),currentStationPlaying:t("currentStationPlaying"),historyList:t("historyList"),shareContainer:t("header__share"),canvasVisualizer:t("visualizer")};function r(t,e,n){return t.replace(new RegExp(e,"g"),n)}function o(t){return getComputedStyle(document.documentElement).getPropertyValue(t).trim()}var i,a,c,u,s=function(t,e,n,r){t?t.textContent!==e&&(t.classList.add(n),t.addEventListener("animationend",function(){t.textContent=e,t.classList.remove(n),t.classList.add(r),t.addEventListener("animationend",function(){t.classList.remove(r)},{once:!0})},{once:!0})):console.warn("⚠️ Element not found for animation")},f="radio__history__song",l="".concat(f,"-link"),p="stations__",d="".concat(p,"list-items--loaded"),v="".concat(p,"station"),h="header__status-indicator__on-air",y=e.audio,m=e.playButton,g=(e.volumeSlider,e.volumeLabel),b=e.currentCoverArt,w=(e.currentSong,e.currentArtist,e.radioHeading),x=e.onAirIndicator,S=e.currentStationImage,O=e.currentStationPlaying,k=null===(i=e.currentSong)||void 0===i?void 0:i.querySelector("span"),j=null===(a=e.currentArtist)||void 0===a?void 0:a.querySelector("span"),_=null===(c=e.currentCoverArt)||void 0===c?void 0:c.querySelector("img"),E={setStationLabel:function(t){w?w.textContent=t:console.warn("⚠️ stationLbl not found")},setPlayIcon:function(t){m?m.innerHTML=t?'<iconify-icon icon="solar:pause-bold"></iconify-icon>':'<iconify-icon icon="solar:play-bold"></iconify-icon>':console.warn("⚠️ playBtn not found")},setLoadingIcon:function(){m?m.innerHTML='<iconify-icon icon="codex:loader"></iconify-icon>':console.warn("⚠️ playBtn not found")},setVolumeLabel:function(t){if(g){g.innerHTML="";var e=document.createElement("span");e.className="visually-hidden",e.textContent="Volumen en",g.appendChild(e),g.appendChild(document.createTextNode(t+"%"))}else console.warn("⚠️ volLabel not found")},setCoverArt:function(t,e,n,r){if(_&&b){var o=n&&"string"==typeof n?n:"#",i=r&&"string"==typeof r?r:"Portada: ".concat(e);_.src=t,_.alt=e,b.href=o,b.setAttribute("aria-label",i)}else console.warn("⚠️ coverArt or coverArtImg not found")},setSongTitle:function(t){s(k,t,"animation-slide-out","animation-fade-in")},setArtistName:function(t){s(j,t,"animation-fade-out","animation-slide-in")},setOnAir:function(t){x?x.classList.toggle(h,t):console.warn("⚠️ onAirInd not found")},setStationImage:function(t,e){S?(S.src=t,S.alt=e):console.warn("⚠️ stationImg not found")},setStationText:function(t){O?O.textContent=t:console.warn("⚠️ stationTxt not found")},setDocumentTitle:function(t){"string"==typeof t&&t?document.title=t:console.warn("⚠️ Invalid title, not updated")},resetUI:function(){w&&(w.textContent=""),k&&(k.textContent=""),j&&(j.textContent=""),_&&(_.src="",_.alt=""),b&&(b.href="#",b.setAttribute("aria-label","")),S&&(S.src="",S.alt=""),O&&(O.textContent=""),x&&x.classList.remove(h),g&&(g.innerHTML=""),console.log("🧹 UI reset")}},A="Reproduciendo...",C=!1,T=function(){return A},P=null,I=null,L=!1;function N(){return I}function F(){return P}function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function G(){var t=z(),e=t.m(G),n=(Object.getPrototypeOf?Object.getPrototypeOf(e):e.__proto__).constructor;function r(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===n||"GeneratorFunction"===(e.displayName||e.name))}var o={throw:1,return:2,break:3,continue:3};function i(t){var e,n;return function(r){e||(e={stop:function(){return n(r.a,2)},catch:function(){return r.v},abrupt:function(t,e){return n(r.a,o[t],e)},delegateYield:function(t,o,i){return e.resultName=o,n(r.d,M(t),i)},finish:function(t){return n(r.f,t)}},n=function(t,n,o){r.p=e.prev,r.n=e.next;try{return t(n,o)}finally{e.next=r.n}}),e.resultName&&(e[e.resultName]=r.v,e.resultName=void 0),e.sent=r.v,e.next=r.n;try{return t.call(this,e)}finally{r.p=e.prev,r.n=e.next}}}return(G=function(){return{wrap:function(e,n,r,o){return t.w(i(e),n,r,o&&o.reverse())},isGeneratorFunction:r,mark:t.m,awrap:function(t,e){return new Q(t,e)},AsyncIterator:q,async:function(t,e,n,o,a){return(r(e)?U:B)(i(t),e,n,o,a)},keys:D,values:M}})()}function M(t){if(null!=t){var e=t["function"==typeof Symbol&&Symbol.iterator||"@@iterator"],n=0;if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length))return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}}}throw new TypeError(R(t)+" is not iterable")}function D(t){var e=Object(t),n=[];for(var r in e)n.unshift(r);return function t(){for(;n.length;)if((r=n.pop())in e)return t.value=r,t.done=!1,t;return t.done=!0,t}}function B(t,e,n,r,o){var i=U(t,e,n,r,o);return i.next().then(function(t){return t.done?t.value:i.next()})}function U(t,e,n,r,o){return new q(z().w(t,e,n,r),o||Promise)}function q(t,e){function n(r,o,i,a){try{var c=t[r](o),u=c.value;return u instanceof Q?e.resolve(u.v).then(function(t){n("next",t,i,a)},function(t){n("throw",t,i,a)}):e.resolve(u).then(function(t){c.value=t,i(c)},function(t){return n("throw",t,i,a)})}catch(t){a(t)}}var r;this.next||(H(q.prototype),H(q.prototype,"function"==typeof Symbol&&Symbol.asyncIterator||"@asyncIterator",function(){return this})),H(this,"_invoke",function(t,o,i){function a(){return new e(function(e,r){n(t,i,e,r)})}return r=r?r.then(a,a):a()},!0)}function z(){var t,e,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",o=n.toStringTag||"@@toStringTag";function i(n,r,o,i){var u=r&&r.prototype instanceof c?r:c,s=Object.create(u.prototype);return H(s,"_invoke",function(n,r,o){var i,c,u,s=0,f=o||[],l=!1,p={p:0,n:0,v:t,a:d,f:d.bind(t,4),d:function(e,n){return i=e,c=0,u=t,p.n=n,a}};function d(n,r){for(c=n,u=r,e=0;!l&&s&&!o&&e<f.length;e++){var o,i=f[e],d=p.p,v=i[2];n>3?(o=v===r)&&(u=i[(c=i[4])?5:(c=3,3)],i[4]=i[5]=t):i[0]<=d&&((o=n<2&&d<i[1])?(c=0,p.v=r,p.n=i[1]):d<v&&(o=n<3||i[0]>r||r>v)&&(i[4]=n,i[5]=r,p.n=v,c=0))}if(o||n>1)return a;throw l=!0,r}return function(o,f,v){if(s>1)throw TypeError("Generator is already running");for(l&&1===f&&d(f,v),c=f,u=v;(e=c<2?t:u)||!l;){i||(c?c<3?(c>1&&(p.n=-1),d(c,u)):p.n=u:p.v=u);try{if(s=2,i){if(c||(o="next"),e=i[o]){if(!(e=e.call(i,u)))throw TypeError("iterator result is not an object");if(!e.done)return e;u=e.value,c<2&&(c=0)}else 1===c&&(e=i.return)&&e.call(i),c<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),c=1);i=t}else if((e=(l=p.n<0)?u:n.call(r,p))!==a)break}catch(e){i=t,c=1,u=e}finally{s=1}}return{value:e,done:l}}}(n,o,i),!0),s}var a={};function c(){}function u(){}function s(){}e=Object.getPrototypeOf;var f=[][r]?e(e([][r]())):(H(e={},r,function(){return this}),e),l=s.prototype=c.prototype=Object.create(f);function p(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,s):(t.__proto__=s,H(t,o,"GeneratorFunction")),t.prototype=Object.create(l),t}return u.prototype=s,H(l,"constructor",s),H(s,"constructor",u),u.displayName="GeneratorFunction",H(s,o,"GeneratorFunction"),H(l),H(l,o,"Generator"),H(l,r,function(){return this}),H(l,"toString",function(){return"[object Generator]"}),(z=function(){return{w:i,m:p}})()}function H(t,e,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(t){o=0}H=function(t,e,n,r){function i(e,n){H(t,e,function(t){return this._invoke(e,n,t)})}e?o?o(t,e,{value:n,enumerable:!r,configurable:!r,writable:!r}):t[e]=n:(i("next",0),i("throw",1),i("return",2))},H(t,e,n,r)}function Q(t,e){this.v=t,this.k=e}function V(t,e,n,r,o,i,a){try{var c=t[i](a),u=c.value}catch(t){return void n(t)}c.done?e(u):Promise.resolve(u).then(r,o)}function $(t){return function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){V(i,r,o,a,c,"next",t)}function c(t){V(i,r,o,a,c,"throw",t)}a(void 0)})}}var J=!1,Y=null,K=null,W=null,X={isReady:!1,isProcessing:!1};function Z(t,e,n){if(!t.paused!==n){var r=new CustomEvent("player:statechange",{detail:{isPlaying:n,timestamp:(new Date).toISOString(),station:t.src}});document.dispatchEvent(r)}e.setPlayIcon(n),e.setOnAir(n)}var tt=function(){var t=$(G().mark(function t(n,r,o,i){var a;return G().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(i.isReady&&!i.isProcessing){t.next=2;break}return t.abrupt("return");case 2:if(i.isProcessing=!0,e.playButton.disabled=!0,r.setLoadingIcon(),t.prev=5,"suspended"!==(null==(a=F())?void 0:a.state)){t.next=10;break}return t.next=10,a.resume();case 10:if(!n.paused){t.next=16;break}return t.next=13,n.play();case 13:r.setDocumentTitle(o.hasSongInfo()?T():"Reproduciendo..."),t.next=18;break;case 16:n.pause(),r.setDocumentTitle(o.getInitialTitle());case 18:t.next=23;break;case 20:t.prev=20,t.t0=t.catch(5),console.error("❌ Error in togglePlay:",t.t0);case 23:return t.prev=23,i.isProcessing=!1,e.playButton.disabled=!1,t.finish(23);case 27:case"end":return t.stop()}},t,null,[[5,20,23,27]])}));return function(e,n,r,o){return t.apply(this,arguments)}}();function et(){return et=$(G().mark(function t(n,r,o,i,a){return G().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return r.setLoadingIcon(),e.playButton.disabled=!0,t.prev=2,t.next=5,n.play();case 5:a.isReady=!0,Z(n,r,!0),r.setDocumentTitle(o.hasSongInfo()?T():"Reproduciendo..."),e.playButton.disabled=!1,null==i||i(!0),t.next=19;break;case 12:t.prev=12,t.t0=t.catch(2),a.isReady=!0,r.setPlayIcon(!1),e.playButton.disabled=!1,null==i||i(!0),document.addEventListener("click",function(){return nt(n,r,o,a)},{once:!0});case 19:case"end":return t.stop()}},t,null,[[2,12]])})),et.apply(this,arguments)}var nt=function(){var t=$(G().mark(function t(n,r,o,i){var a;return G().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(r.setLoadingIcon(),e.playButton.disabled=!0,t.prev=2,"suspended"!==(null==(a=F())?void 0:a.state)){t.next=7;break}return t.next=7,a.resume();case 7:return t.next=9,n.play();case 9:r.setDocumentTitle(o.hasSongInfo()?T():"Reproduciendo..."),t.next=15;break;case 12:t.prev=12,t.t0=t.catch(2),console.error("❌ Error in playback:",t.t0);case 15:return t.prev=15,e.playButton.disabled=!1,t.finish(15);case 18:case"end":return t.stop()}},t,null,[[2,12,15,18]])}));return function(e,n,r,o){return t.apply(this,arguments)}}();function rt(t,n,r,o){if(null!=t&&t.stream&&null!=t&&t.name&&null!=t&&t.logo){var i=(u=r||document.title,{getInitialTitle:function(){return u},hasSongInfo:function(){return C}});E.setStationLabel("".concat(t.name," - Emisora en vivo")),E.setStationImage(t.logo,"Reproduciendo: ".concat(t.name)),E.setStationText("Reproduciendo: ".concat(t.name)),function(t,e){var n;t.color&&(n="string"==typeof t.color?t.color:Array.isArray(t.color)&&t.color.length>=2?t.color[1]:e,t.color_light?document.documentElement.style.setProperty("--color-primary-text","var(--color-back3)"):document.documentElement.style.setProperty("--color-primary-text","#ffffff"),"string"==typeof n&&/^#[0-9A-Fa-f]{6}$/.test(n)?document.documentElement.style.setProperty("--color-primary",n):console.warn("⚠️ Invalid color: ".concat(n,", using default color.")))}(t,o),function(t,n,r,o,i){var a;W=t,Y=r,K=n,X.isReady=!1,X.isProcessing=!1,W.src=o,W.volume=e.volumeSlider.value/100,K.setVolumeLabel(e.volumeSlider.value),a=W,L||(P=new(window.AudioContext||window.webkitAudioContext),(I=P.createAnalyser()).fftSize=2048,P.createMediaElementSource(a).connect(I),I.connect(P.destination),L=!0),J||(function(t,n,r){t.addEventListener("playing",function(){return Z(t,n,!0)}),t.addEventListener("pause",function(){return Z(t,n,!1)}),e.volumeSlider.addEventListener("input",function(){return function(t,n){t.volume=e.volumeSlider.value/100,n.setVolumeLabel(e.volumeSlider.value)}(t,n)}),e.playButton.addEventListener("click",function(){return tt(t,n,r,X)})}(W,K,Y),J=!0),function(t,e,n,r,o){et.apply(this,arguments)}(W,K,Y,i,X)}(y,E,i,t.stream,n)}else console.error("❌ Error: Invalid or incomplete station object")}var ot=function(t){var e=t.title,n=t.artist,o=t.art,i=t.dinamicTitleGenerate,a=encodeURIComponent("".concat(e," ").concat(n)),c="https://open.spotify.com/search/$".concat(a);E.setSongTitle(e),E.setArtistName(n),E.setCoverArt(o,"Portada: ".concat(e," - ").concat(n),c,"Ver ".concat(e," - ").concat(n," en Spotify (abre en nueva pestaña)")),document.body.style.setProperty("--bg-image","url('".concat(o,"')")),function(t){A=t,C=!0}(r(i,"////","".concat(n,' - "').concat(e,'"'))),y.paused||E.setDocumentTitle(T())};function it(t){return it="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},it(t)}function at(){var t=pt(),e=t.m(at),n=(Object.getPrototypeOf?Object.getPrototypeOf(e):e.__proto__).constructor;function r(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===n||"GeneratorFunction"===(e.displayName||e.name))}var o={throw:1,return:2,break:3,continue:3};function i(t){var e,n;return function(r){e||(e={stop:function(){return n(r.a,2)},catch:function(){return r.v},abrupt:function(t,e){return n(r.a,o[t],e)},delegateYield:function(t,o,i){return e.resultName=o,n(r.d,ct(t),i)},finish:function(t){return n(r.f,t)}},n=function(t,n,o){r.p=e.prev,r.n=e.next;try{return t(n,o)}finally{e.next=r.n}}),e.resultName&&(e[e.resultName]=r.v,e.resultName=void 0),e.sent=r.v,e.next=r.n;try{return t.call(this,e)}finally{r.p=e.prev,r.n=e.next}}}return(at=function(){return{wrap:function(e,n,r,o){return t.w(i(e),n,r,o&&o.reverse())},isGeneratorFunction:r,mark:t.m,awrap:function(t,e){return new vt(t,e)},AsyncIterator:lt,async:function(t,e,n,o,a){return(r(e)?ft:st)(i(t),e,n,o,a)},keys:ut,values:ct}})()}function ct(t){if(null!=t){var e=t["function"==typeof Symbol&&Symbol.iterator||"@@iterator"],n=0;if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length))return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}}}throw new TypeError(it(t)+" is not iterable")}function ut(t){var e=Object(t),n=[];for(var r in e)n.unshift(r);return function t(){for(;n.length;)if((r=n.pop())in e)return t.value=r,t.done=!1,t;return t.done=!0,t}}function st(t,e,n,r,o){var i=ft(t,e,n,r,o);return i.next().then(function(t){return t.done?t.value:i.next()})}function ft(t,e,n,r,o){return new lt(pt().w(t,e,n,r),o||Promise)}function lt(t,e){function n(r,o,i,a){try{var c=t[r](o),u=c.value;return u instanceof vt?e.resolve(u.v).then(function(t){n("next",t,i,a)},function(t){n("throw",t,i,a)}):e.resolve(u).then(function(t){c.value=t,i(c)},function(t){return n("throw",t,i,a)})}catch(t){a(t)}}var r;this.next||(dt(lt.prototype),dt(lt.prototype,"function"==typeof Symbol&&Symbol.asyncIterator||"@asyncIterator",function(){return this})),dt(this,"_invoke",function(t,o,i){function a(){return new e(function(e,r){n(t,i,e,r)})}return r=r?r.then(a,a):a()},!0)}function pt(){var t,e,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",o=n.toStringTag||"@@toStringTag";function i(n,r,o,i){var u=r&&r.prototype instanceof c?r:c,s=Object.create(u.prototype);return dt(s,"_invoke",function(n,r,o){var i,c,u,s=0,f=o||[],l=!1,p={p:0,n:0,v:t,a:d,f:d.bind(t,4),d:function(e,n){return i=e,c=0,u=t,p.n=n,a}};function d(n,r){for(c=n,u=r,e=0;!l&&s&&!o&&e<f.length;e++){var o,i=f[e],d=p.p,v=i[2];n>3?(o=v===r)&&(u=i[(c=i[4])?5:(c=3,3)],i[4]=i[5]=t):i[0]<=d&&((o=n<2&&d<i[1])?(c=0,p.v=r,p.n=i[1]):d<v&&(o=n<3||i[0]>r||r>v)&&(i[4]=n,i[5]=r,p.n=v,c=0))}if(o||n>1)return a;throw l=!0,r}return function(o,f,v){if(s>1)throw TypeError("Generator is already running");for(l&&1===f&&d(f,v),c=f,u=v;(e=c<2?t:u)||!l;){i||(c?c<3?(c>1&&(p.n=-1),d(c,u)):p.n=u:p.v=u);try{if(s=2,i){if(c||(o="next"),e=i[o]){if(!(e=e.call(i,u)))throw TypeError("iterator result is not an object");if(!e.done)return e;u=e.value,c<2&&(c=0)}else 1===c&&(e=i.return)&&e.call(i),c<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),c=1);i=t}else if((e=(l=p.n<0)?u:n.call(r,p))!==a)break}catch(e){i=t,c=1,u=e}finally{s=1}}return{value:e,done:l}}}(n,o,i),!0),s}var a={};function c(){}function u(){}function s(){}e=Object.getPrototypeOf;var f=[][r]?e(e([][r]())):(dt(e={},r,function(){return this}),e),l=s.prototype=c.prototype=Object.create(f);function p(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,s):(t.__proto__=s,dt(t,o,"GeneratorFunction")),t.prototype=Object.create(l),t}return u.prototype=s,dt(l,"constructor",s),dt(s,"constructor",u),u.displayName="GeneratorFunction",dt(s,o,"GeneratorFunction"),dt(l),dt(l,o,"Generator"),dt(l,r,function(){return this}),dt(l,"toString",function(){return"[object Generator]"}),(pt=function(){return{w:i,m:p}})()}function dt(t,e,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(t){o=0}dt=function(t,e,n,r){function i(e,n){dt(t,e,function(t){return this._invoke(e,n,t)})}e?o?o(t,e,{value:n,enumerable:!r,configurable:!r,writable:!r}):t[e]=n:(i("next",0),i("throw",1),i("return",2))},dt(t,e,n,r)}function vt(t,e){this.v=t,this.k=e}function ht(t,e,n,r,o,i,a){try{var c=t[i](a),u=c.value}catch(t){return void n(t)}c.done?e(u):Promise.resolve(u).then(r,o)}function yt(t,e){return mt.apply(this,arguments)}function mt(){var t;return t=at().mark(function t(e,n){var r,o;return at().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return(r=new Headers).append("Authorization","Bearer ".concat(n)),t.next=4,fetch(e,{headers:r});case 4:if((o=t.sent).ok){t.next=7;break}throw new Error("HTTP error! status: ".concat(o.status));case 7:return t.abrupt("return",o.json());case 8:case"end":return t.stop()}},t)}),mt=function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){ht(i,r,o,a,c,"next",t)}function c(t){ht(i,r,o,a,c,"throw",t)}a(void 0)})},mt.apply(this,arguments)}function gt(t){return gt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},gt(t)}function bt(){var t=jt(),e=t.m(bt),n=(Object.getPrototypeOf?Object.getPrototypeOf(e):e.__proto__).constructor;function r(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===n||"GeneratorFunction"===(e.displayName||e.name))}var o={throw:1,return:2,break:3,continue:3};function i(t){var e,n;return function(r){e||(e={stop:function(){return n(r.a,2)},catch:function(){return r.v},abrupt:function(t,e){return n(r.a,o[t],e)},delegateYield:function(t,o,i){return e.resultName=o,n(r.d,wt(t),i)},finish:function(t){return n(r.f,t)}},n=function(t,n,o){r.p=e.prev,r.n=e.next;try{return t(n,o)}finally{e.next=r.n}}),e.resultName&&(e[e.resultName]=r.v,e.resultName=void 0),e.sent=r.v,e.next=r.n;try{return t.call(this,e)}finally{r.p=e.prev,r.n=e.next}}}return(bt=function(){return{wrap:function(e,n,r,o){return t.w(i(e),n,r,o&&o.reverse())},isGeneratorFunction:r,mark:t.m,awrap:function(t,e){return new Et(t,e)},AsyncIterator:kt,async:function(t,e,n,o,a){return(r(e)?Ot:St)(i(t),e,n,o,a)},keys:xt,values:wt}})()}function wt(t){if(null!=t){var e=t["function"==typeof Symbol&&Symbol.iterator||"@@iterator"],n=0;if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length))return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}}}throw new TypeError(gt(t)+" is not iterable")}function xt(t){var e=Object(t),n=[];for(var r in e)n.unshift(r);return function t(){for(;n.length;)if((r=n.pop())in e)return t.value=r,t.done=!1,t;return t.done=!0,t}}function St(t,e,n,r,o){var i=Ot(t,e,n,r,o);return i.next().then(function(t){return t.done?t.value:i.next()})}function Ot(t,e,n,r,o){return new kt(jt().w(t,e,n,r),o||Promise)}function kt(t,e){function n(r,o,i,a){try{var c=t[r](o),u=c.value;return u instanceof Et?e.resolve(u.v).then(function(t){n("next",t,i,a)},function(t){n("throw",t,i,a)}):e.resolve(u).then(function(t){c.value=t,i(c)},function(t){return n("throw",t,i,a)})}catch(t){a(t)}}var r;this.next||(_t(kt.prototype),_t(kt.prototype,"function"==typeof Symbol&&Symbol.asyncIterator||"@asyncIterator",function(){return this})),_t(this,"_invoke",function(t,o,i){function a(){return new e(function(e,r){n(t,i,e,r)})}return r=r?r.then(a,a):a()},!0)}function jt(){var t,e,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",o=n.toStringTag||"@@toStringTag";function i(n,r,o,i){var u=r&&r.prototype instanceof c?r:c,s=Object.create(u.prototype);return _t(s,"_invoke",function(n,r,o){var i,c,u,s=0,f=o||[],l=!1,p={p:0,n:0,v:t,a:d,f:d.bind(t,4),d:function(e,n){return i=e,c=0,u=t,p.n=n,a}};function d(n,r){for(c=n,u=r,e=0;!l&&s&&!o&&e<f.length;e++){var o,i=f[e],d=p.p,v=i[2];n>3?(o=v===r)&&(u=i[(c=i[4])?5:(c=3,3)],i[4]=i[5]=t):i[0]<=d&&((o=n<2&&d<i[1])?(c=0,p.v=r,p.n=i[1]):d<v&&(o=n<3||i[0]>r||r>v)&&(i[4]=n,i[5]=r,p.n=v,c=0))}if(o||n>1)return a;throw l=!0,r}return function(o,f,v){if(s>1)throw TypeError("Generator is already running");for(l&&1===f&&d(f,v),c=f,u=v;(e=c<2?t:u)||!l;){i||(c?c<3?(c>1&&(p.n=-1),d(c,u)):p.n=u:p.v=u);try{if(s=2,i){if(c||(o="next"),e=i[o]){if(!(e=e.call(i,u)))throw TypeError("iterator result is not an object");if(!e.done)return e;u=e.value,c<2&&(c=0)}else 1===c&&(e=i.return)&&e.call(i),c<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),c=1);i=t}else if((e=(l=p.n<0)?u:n.call(r,p))!==a)break}catch(e){i=t,c=1,u=e}finally{s=1}}return{value:e,done:l}}}(n,o,i),!0),s}var a={};function c(){}function u(){}function s(){}e=Object.getPrototypeOf;var f=[][r]?e(e([][r]())):(_t(e={},r,function(){return this}),e),l=s.prototype=c.prototype=Object.create(f);function p(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,s):(t.__proto__=s,_t(t,o,"GeneratorFunction")),t.prototype=Object.create(l),t}return u.prototype=s,_t(l,"constructor",s),_t(s,"constructor",u),u.displayName="GeneratorFunction",_t(s,o,"GeneratorFunction"),_t(l),_t(l,o,"Generator"),_t(l,r,function(){return this}),_t(l,"toString",function(){return"[object Generator]"}),(jt=function(){return{w:i,m:p}})()}function _t(t,e,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(t){o=0}_t=function(t,e,n,r){function i(e,n){_t(t,e,function(t){return this._invoke(e,n,t)})}e?o?o(t,e,{value:n,enumerable:!r,configurable:!r,writable:!r}):t[e]=n:(i("next",0),i("throw",1),i("return",2))},_t(t,e,n,r)}function Et(t,e){this.v=t,this.k=e}function At(t,e,n,r,o,i,a){try{var c=t[i](a),u=c.value}catch(t){return void n(t)}c.done?e(u):Promise.resolve(u).then(r,o)}var Ct={title:"",artist:""},Tt=null,Pt=!1;function It(t,e){return Lt.apply(this,arguments)}function Lt(){var t;return t=bt().mark(function t(e,n){var r,o,i,a,c,u,s,f,l,p,d;return bt().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,yt(e);case 3:if(null!=(o=t.sent)&&null!==(r=o.now_playing)&&void 0!==r&&r.song){t.next=7;break}return console.warn("⚠️ Estructura de datos inválida"),t.abrupt("return");case 7:i=o.now_playing.song,a=i.title||"Desconocido",c=i.artist||"Desconocido",u=i.art,s=a.trim().toLowerCase(),f=c.trim().toLowerCase(),l=(Ct.title||"").trim().toLowerCase(),p=(Ct.artist||"").trim().toLowerCase(),d=l!==s||p!==f,(""===Ct.title&&""===Ct.artist||d)&&(Ct={title:a,artist:c},ot({title:a,artist:c,art:u,dinamicTitleGenerate:n}),Nt(a,c,u)),t.next=23;break;case 20:t.prev=20,t.t0=t.catch(0),console.error("❌ Error en updateNowPlaying:",t.t0);case 23:case"end":return t.stop()}},t,null,[[0,20]])}),Lt=function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){At(i,r,o,a,c,"next",t)}function c(t){At(i,r,o,a,c,"throw",t)}a(void 0)})},Lt.apply(this,arguments)}function Nt(t,e,n){var r=new CustomEvent("nowplaying:update",{detail:{title:t,artist:e,art:n,timestamp:(new Date).toISOString()}});document.dispatchEvent(r)}function Ft(t,e){var n="boolean"==typeof e?e:!t.classList.contains("show-share-options");t.classList.toggle("show-share-options",n),shareButton.setAttribute("aria-expanded",n)}function Rt(t){return Rt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Rt(t)}function Gt(){var t=zt(),e=t.m(Gt),n=(Object.getPrototypeOf?Object.getPrototypeOf(e):e.__proto__).constructor;function r(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===n||"GeneratorFunction"===(e.displayName||e.name))}var o={throw:1,return:2,break:3,continue:3};function i(t){var e,n;return function(r){e||(e={stop:function(){return n(r.a,2)},catch:function(){return r.v},abrupt:function(t,e){return n(r.a,o[t],e)},delegateYield:function(t,o,i){return e.resultName=o,n(r.d,Mt(t),i)},finish:function(t){return n(r.f,t)}},n=function(t,n,o){r.p=e.prev,r.n=e.next;try{return t(n,o)}finally{e.next=r.n}}),e.resultName&&(e[e.resultName]=r.v,e.resultName=void 0),e.sent=r.v,e.next=r.n;try{return t.call(this,e)}finally{r.p=e.prev,r.n=e.next}}}return(Gt=function(){return{wrap:function(e,n,r,o){return t.w(i(e),n,r,o&&o.reverse())},isGeneratorFunction:r,mark:t.m,awrap:function(t,e){return new Qt(t,e)},AsyncIterator:qt,async:function(t,e,n,o,a){return(r(e)?Ut:Bt)(i(t),e,n,o,a)},keys:Dt,values:Mt}})()}function Mt(t){if(null!=t){var e=t["function"==typeof Symbol&&Symbol.iterator||"@@iterator"],n=0;if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length))return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}}}throw new TypeError(Rt(t)+" is not iterable")}function Dt(t){var e=Object(t),n=[];for(var r in e)n.unshift(r);return function t(){for(;n.length;)if((r=n.pop())in e)return t.value=r,t.done=!1,t;return t.done=!0,t}}function Bt(t,e,n,r,o){var i=Ut(t,e,n,r,o);return i.next().then(function(t){return t.done?t.value:i.next()})}function Ut(t,e,n,r,o){return new qt(zt().w(t,e,n,r),o||Promise)}function qt(t,e){function n(r,o,i,a){try{var c=t[r](o),u=c.value;return u instanceof Qt?e.resolve(u.v).then(function(t){n("next",t,i,a)},function(t){n("throw",t,i,a)}):e.resolve(u).then(function(t){c.value=t,i(c)},function(t){return n("throw",t,i,a)})}catch(t){a(t)}}var r;this.next||(Ht(qt.prototype),Ht(qt.prototype,"function"==typeof Symbol&&Symbol.asyncIterator||"@asyncIterator",function(){return this})),Ht(this,"_invoke",function(t,o,i){function a(){return new e(function(e,r){n(t,i,e,r)})}return r=r?r.then(a,a):a()},!0)}function zt(){var t,e,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",o=n.toStringTag||"@@toStringTag";function i(n,r,o,i){var u=r&&r.prototype instanceof c?r:c,s=Object.create(u.prototype);return Ht(s,"_invoke",function(n,r,o){var i,c,u,s=0,f=o||[],l=!1,p={p:0,n:0,v:t,a:d,f:d.bind(t,4),d:function(e,n){return i=e,c=0,u=t,p.n=n,a}};function d(n,r){for(c=n,u=r,e=0;!l&&s&&!o&&e<f.length;e++){var o,i=f[e],d=p.p,v=i[2];n>3?(o=v===r)&&(u=i[(c=i[4])?5:(c=3,3)],i[4]=i[5]=t):i[0]<=d&&((o=n<2&&d<i[1])?(c=0,p.v=r,p.n=i[1]):d<v&&(o=n<3||i[0]>r||r>v)&&(i[4]=n,i[5]=r,p.n=v,c=0))}if(o||n>1)return a;throw l=!0,r}return function(o,f,v){if(s>1)throw TypeError("Generator is already running");for(l&&1===f&&d(f,v),c=f,u=v;(e=c<2?t:u)||!l;){i||(c?c<3?(c>1&&(p.n=-1),d(c,u)):p.n=u:p.v=u);try{if(s=2,i){if(c||(o="next"),e=i[o]){if(!(e=e.call(i,u)))throw TypeError("iterator result is not an object");if(!e.done)return e;u=e.value,c<2&&(c=0)}else 1===c&&(e=i.return)&&e.call(i),c<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),c=1);i=t}else if((e=(l=p.n<0)?u:n.call(r,p))!==a)break}catch(e){i=t,c=1,u=e}finally{s=1}}return{value:e,done:l}}}(n,o,i),!0),s}var a={};function c(){}function u(){}function s(){}e=Object.getPrototypeOf;var f=[][r]?e(e([][r]())):(Ht(e={},r,function(){return this}),e),l=s.prototype=c.prototype=Object.create(f);function p(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,s):(t.__proto__=s,Ht(t,o,"GeneratorFunction")),t.prototype=Object.create(l),t}return u.prototype=s,Ht(l,"constructor",s),Ht(s,"constructor",u),u.displayName="GeneratorFunction",Ht(s,o,"GeneratorFunction"),Ht(l),Ht(l,o,"Generator"),Ht(l,r,function(){return this}),Ht(l,"toString",function(){return"[object Generator]"}),(zt=function(){return{w:i,m:p}})()}function Ht(t,e,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(t){o=0}Ht=function(t,e,n,r){function i(e,n){Ht(t,e,function(t){return this._invoke(e,n,t)})}e?o?o(t,e,{value:n,enumerable:!r,configurable:!r,writable:!r}):t[e]=n:(i("next",0),i("throw",1),i("return",2))},Ht(t,e,n,r)}function Qt(t,e){this.v=t,this.k=e}function Vt(t,e,n,r,o,i,a){try{var c=t[i](a),u=c.value}catch(t){return void n(t)}c.done?e(u):Promise.resolve(u).then(r,o)}var $t=e.historyList;$t||console.warn("⚠️ historyList not found in DOM");var Jt=null,Yt=!1;function Kt(t,e){var n,r,o=(null===(n=t.song)||void 0===n?void 0:n.title)||"",i=(null===(r=t.song)||void 0===r?void 0:r.artist)||"",a=e;return!(o.toLowerCase().includes(a)||i.toLowerCase().includes(a))}function Wt(t){var e,n,r=(null===(e=t.song)||void 0===e?void 0:e.title)||"Desconocido",o=(null===(n=t.song)||void 0===n?void 0:n.artist)||"Desconocido",i="".concat(r," | ").concat(o),a="https://open.spotify.com/search/".concat(encodeURIComponent(r+" "+o)),c=document.createElement("li");c.dataset.key=i,c.setAttribute("role","listitem");var u=document.createElement("article");u.className=f,u.setAttribute("itemscope",""),u.setAttribute("itemtype","https://schema.org/MusicRecording");var s=document.createElement("a");s.href=a,s.setAttribute("aria-label","Escuchar ".concat(r," de ").concat(o," en Spotify (abre en nueva ventana)")),s.setAttribute("rel","noopener noreferrer"),s.setAttribute("target","_blank"),s.className=l,s.setAttribute("itemprop","url");var p=document.createElement("h4");p.setAttribute("itemprop","name"),p.textContent=r;var d=document.createElement("p");return d.setAttribute("itemprop","byArtist"),d.textContent=o,s.appendChild(p),s.appendChild(d),u.appendChild(s),c.appendChild(u),c}function Xt(t,e){return Zt.apply(this,arguments)}function Zt(){var t;return t=Gt().mark(function t(e,n){var r,o,i,a,c,u,s,f,l,p,d,v,h;return Gt().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if($t){t.next=2;break}return t.abrupt("return");case 2:return r=!$t.hasAttribute("data-history-loaded"),o=r?$t.firstElementChild:null,t.prev=4,t.next=7,yt(e,"4d397dbac5066e4d:3088f0271d6961cbdd3e83d9ec21a19b");case 7:if(i=(i=t.sent).filter(function(t){return Kt(t,"tricolrock")}),Array.isArray(i)&&0!==i.length){t.next=11;break}return t.abrupt("return");case 11:if(!r){t.next=17;break}for($t.innerHTML="",a=0;a<n&&a<i.length;a++)$t.appendChild(Wt(i[a]));$t.setAttribute("data-history-loaded","true"),t.next=26;break;case 17:if(f=i[0],l=(null===(c=f.song)||void 0===c?void 0:c.title)||"Desconocido",p=(null===(u=f.song)||void 0===u?void 0:u.artist)||"Desconocido",d="".concat(l," | ").concat(p),(null===(s=$t.firstElementChild)||void 0===s?void 0:s.dataset.key)!==d){t.next=23;break}return t.abrupt("return");case 23:for(v=Wt(f),$t.prepend(v);$t.children.length>n;)null===(h=$t.lastElementChild)||void 0===h||h.remove();case 26:t.next=31;break;case 28:t.prev=28,t.t0=t.catch(4),console.error("❌ Error en loadHistory:",t.t0);case 31:return t.prev=31,null==o||o.remove(),t.finish(31);case 34:case"end":return t.stop()}},t,null,[[4,28,31,34]])}),Zt=function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){Vt(i,r,o,a,c,"next",t)}function c(t){Vt(i,r,o,a,c,"throw",t)}a(void 0)})},Zt.apply(this,arguments)}var te=document.getElementById("stationSelector");te||console.warn("⚠️ stationSelector not found");var ee,ne=document.title,re=function(){var t=o("--base-color-dark"),e=o("--color-col-yellow"),n=o("--color-col-blue");return{BASE_COLOR_DARK:t,DEFAULT_COLOURS:[e,n,o("--color-col-red")],defaultColor:n}}();function oe(t){return oe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},oe(t)}function ie(){var t=le(),e=t.m(ie),n=(Object.getPrototypeOf?Object.getPrototypeOf(e):e.__proto__).constructor;function r(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===n||"GeneratorFunction"===(e.displayName||e.name))}var o={throw:1,return:2,break:3,continue:3};function i(t){var e,n;return function(r){e||(e={stop:function(){return n(r.a,2)},catch:function(){return r.v},abrupt:function(t,e){return n(r.a,o[t],e)},delegateYield:function(t,o,i){return e.resultName=o,n(r.d,ae(t),i)},finish:function(t){return n(r.f,t)}},n=function(t,n,o){r.p=e.prev,r.n=e.next;try{return t(n,o)}finally{e.next=r.n}}),e.resultName&&(e[e.resultName]=r.v,e.resultName=void 0),e.sent=r.v,e.next=r.n;try{return t.call(this,e)}finally{r.p=e.prev,r.n=e.next}}}return(ie=function(){return{wrap:function(e,n,r,o){return t.w(i(e),n,r,o&&o.reverse())},isGeneratorFunction:r,mark:t.m,awrap:function(t,e){return new de(t,e)},AsyncIterator:fe,async:function(t,e,n,o,a){return(r(e)?se:ue)(i(t),e,n,o,a)},keys:ce,values:ae}})()}function ae(t){if(null!=t){var e=t["function"==typeof Symbol&&Symbol.iterator||"@@iterator"],n=0;if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length))return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}}}throw new TypeError(oe(t)+" is not iterable")}function ce(t){var e=Object(t),n=[];for(var r in e)n.unshift(r);return function t(){for(;n.length;)if((r=n.pop())in e)return t.value=r,t.done=!1,t;return t.done=!0,t}}function ue(t,e,n,r,o){var i=se(t,e,n,r,o);return i.next().then(function(t){return t.done?t.value:i.next()})}function se(t,e,n,r,o){return new fe(le().w(t,e,n,r),o||Promise)}function fe(t,e){function n(r,o,i,a){try{var c=t[r](o),u=c.value;return u instanceof de?e.resolve(u.v).then(function(t){n("next",t,i,a)},function(t){n("throw",t,i,a)}):e.resolve(u).then(function(t){c.value=t,i(c)},function(t){return n("throw",t,i,a)})}catch(t){a(t)}}var r;this.next||(pe(fe.prototype),pe(fe.prototype,"function"==typeof Symbol&&Symbol.asyncIterator||"@asyncIterator",function(){return this})),pe(this,"_invoke",function(t,o,i){function a(){return new e(function(e,r){n(t,i,e,r)})}return r=r?r.then(a,a):a()},!0)}function le(){var t,e,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",o=n.toStringTag||"@@toStringTag";function i(n,r,o,i){var u=r&&r.prototype instanceof c?r:c,s=Object.create(u.prototype);return pe(s,"_invoke",function(n,r,o){var i,c,u,s=0,f=o||[],l=!1,p={p:0,n:0,v:t,a:d,f:d.bind(t,4),d:function(e,n){return i=e,c=0,u=t,p.n=n,a}};function d(n,r){for(c=n,u=r,e=0;!l&&s&&!o&&e<f.length;e++){var o,i=f[e],d=p.p,v=i[2];n>3?(o=v===r)&&(u=i[(c=i[4])?5:(c=3,3)],i[4]=i[5]=t):i[0]<=d&&((o=n<2&&d<i[1])?(c=0,p.v=r,p.n=i[1]):d<v&&(o=n<3||i[0]>r||r>v)&&(i[4]=n,i[5]=r,p.n=v,c=0))}if(o||n>1)return a;throw l=!0,r}return function(o,f,v){if(s>1)throw TypeError("Generator is already running");for(l&&1===f&&d(f,v),c=f,u=v;(e=c<2?t:u)||!l;){i||(c?c<3?(c>1&&(p.n=-1),d(c,u)):p.n=u:p.v=u);try{if(s=2,i){if(c||(o="next"),e=i[o]){if(!(e=e.call(i,u)))throw TypeError("iterator result is not an object");if(!e.done)return e;u=e.value,c<2&&(c=0)}else 1===c&&(e=i.return)&&e.call(i),c<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),c=1);i=t}else if((e=(l=p.n<0)?u:n.call(r,p))!==a)break}catch(e){i=t,c=1,u=e}finally{s=1}}return{value:e,done:l}}}(n,o,i),!0),s}var a={};function c(){}function u(){}function s(){}e=Object.getPrototypeOf;var f=[][r]?e(e([][r]())):(pe(e={},r,function(){return this}),e),l=s.prototype=c.prototype=Object.create(f);function p(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,s):(t.__proto__=s,pe(t,o,"GeneratorFunction")),t.prototype=Object.create(l),t}return u.prototype=s,pe(l,"constructor",s),pe(s,"constructor",u),u.displayName="GeneratorFunction",pe(s,o,"GeneratorFunction"),pe(l),pe(l,o,"Generator"),pe(l,r,function(){return this}),pe(l,"toString",function(){return"[object Generator]"}),(le=function(){return{w:i,m:p}})()}function pe(t,e,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(t){o=0}pe=function(t,e,n,r){function i(e,n){pe(t,e,function(t){return this._invoke(e,n,t)})}e?o?o(t,e,{value:n,enumerable:!r,configurable:!r,writable:!r}):t[e]=n:(i("next",0),i("throw",1),i("return",2))},pe(t,e,n,r)}function de(t,e){this.v=t,this.k=e}function ve(t,e,n,r,o,i,a){try{var c=t[i](a),u=c.value}catch(t){return void n(t)}c.done?e(u):Promise.resolve(u).then(r,o)}var he=re.BASE_COLOR_DARK,ye=re.DEFAULT_COLOURS,me=re.defaultColor,ge=null===(ee=window.USE_BUTTONS)||void 0===ee||ee,be=localStorage.getItem("main_station")||window.main_station||"radio-tricolrock";console.log(window.USE_BUTTONS," use // ",ge),console.log(window.main_station," // ",be);var we={};function xe(){var t;return t=ie().mark(function t(){var e,n;return ie().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,fetch("js/stations.json");case 3:if((e=t.sent).ok){t.next=6;break}throw new Error("No se pudo leer stations.json");case 6:return t.next=8,e.json();case 8:n=t.sent,Se((we=n.reduce(function(t,e){return t[e.id]=e,t},{}))[be]),ke(),t.next=17;break;case 14:t.prev=14,t.t0=t.catch(0),console.error("❌ Error cargando stations.json:",t.t0);case 17:case"end":return t.stop()}},t,null,[[0,14]])}),xe=function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){ve(i,r,o,a,c,"next",t)}function c(t){ve(i,r,o,a,c,"throw",t)}a(void 0)})},xe.apply(this,arguments)}function Se(t){var n;ot({title:t.name,artist:"Cargando",art:"".concat(window.location.href,"/images/tricolrock.webp"),dinamicTitleGenerate:"Cargando... ".concat(t.name)}),Tt&&(clearInterval(Tt),Tt=null),Pt=!1,Ct={title:"",artist:""},n=t.name,Jt&&(clearInterval(Jt),Jt=null),Yt=!1,$t&&($t.innerHTML="",$t.innerHTML='<li><span><iconify-icon class="radio__history-list-loader" icon="codex:loader"></iconify-icon> '.concat(n,"</span></li>"),$t.removeAttribute("data-history-loaded")),rt(t,function(n,o){if(n){!function(t){if(!Pt){Pt=!0;var e=r("🤘 //// en ---- 🇨🇴 🎶","----",t.name);It(t.api,e),Tt=setInterval(function(){It(t.api,e)},4e4)}}(t),a=t.history,Yt||(Yt=!0,Xt(a,6),Jt=setInterval(function(){Xt(a,6)},16e4));var i=e.shareContainer;document.addEventListener("nowplaying:update",function(e){if(i){var n=e.detail,o=n.title,a=n.artist,c=r('Estoy escuchando a ARTIST - "TRACK", en ----',"----",t.name);c=r(c,"TRACK",o),c=r(c,"ARTIST",a),function(t){var e=t.shareContainer,n=t.messageShare,r=e.querySelector("button"),o=e.querySelector("ul"),i=e.querySelector('[data-network="twitter"]'),a=e.querySelector('[data-network="threads"]'),c=e.querySelector('[data-network="facebook"]'),u=encodeURIComponent(window.location.href),s=encodeURIComponent(n);null==r||r.addEventListener("click",function(){return Ft(o)}),i.href="https://twitter.com/intent/tweet?text=".concat(s),a.href="https://www.threads.net/intent/post?text=".concat(s),c.href="https://www.facebook.com/sharer/sharer.php?u=".concat(u,"&quote=").concat(s,"&display=popup")}({shareContainer:i,messageShare:c})}},{once:!0})}var a},ne,me);var o=N(),i=e.canvasVisualizer;i&&o&&(i.style.display="block",function(t,e,n,r){var o,i=!1;"string"==typeof n?(o=[n,n,n],i=!0):o=Array.isArray(n)&&n.length>=3?n.slice(0,3):r,o=o.map(function(t){return/^#[0-9A-Fa-f]{6}$/.test(t)?t:r[o.indexOf(t)]||"#ffffff"});var a=t.getContext("2d"),c=window.devicePixelRatio||1,u=e.frequencyBinCount,s=new Uint8Array(u),f=Array.from({length:3},function(){return new Float32Array(u).fill(0)});!function n(){if(function(t){var e=t.getBoundingClientRect();return e.width>0&&e.height>0&&e.top<window.innerHeight&&e.bottom>0}(t)){var r=t.clientWidth,l=t.clientHeight;t.width===r*c&&t.height===l*c||(t.width=r*c,t.height=l*c,a.setTransform(c,0,0,c,0,0)),e.getByteTimeDomainData(s),a.clearRect(0,0,r,l);for(var p=r/u,d=l/2,v=0;v<3;v++){var h=d+18*(v-1),y=1===v?1:4,m=1===v?1.4*1.6:1.4,g=a.createLinearGradient(0,0,r,0),b=!i||0!==v&&2!==v?o[v]:o[v]+"80";g.addColorStop(0,"transparent"),g.addColorStop(1===v?.1:.25,b),g.addColorStop(.9,b),g.addColorStop(1,"transparent"),a.beginPath(),a.lineWidth=10,a.strokeStyle=g,a.lineJoin="round";for(var w=0,x=0;x<u;x+=y){var S=(s[x]-128)/128*m*l;f[v][x]+=.1*(S-f[v][x]);var O=h-f[v][x];0===x?a.moveTo(w,O):a.lineTo(w,O),w+=p*y}a.stroke()}requestAnimationFrame(n)}else requestAnimationFrame(n)}()}(i,o,t.color,ye))}function Oe(t){t!==be&&we[t]&&(Se(we[be=t]),ke())}function ke(){!function(t,e,n,r,o){te.innerHTML="",te.classList.add(d),t&&Object.keys(t).length?Object.keys(t).forEach(function(i){var a=t[i];if(!0===a.active){var c,u=i===e,s=document.createElement("li");s.setAttribute("itemprop","itemListElement"),s.setAttribute("itemscope",""),s.setAttribute("itemtype","https://schema.org/RadioStation"),n?(c=document.createElement("button")).addEventListener("click",function(){o(i),localStorage.setItem("main_station",i)}):(c=document.createElement("a")).href="/".concat(i),c.className="".concat(v,"-link"),u&&(c.classList.add("".concat(v,"-link--active")),c.setAttribute("aria-current","page")),c.setAttribute("aria-label","Escuchar ".concat(a.name));var f=document.createElement("span");f.className="".concat(v,"-glow"),f.setAttribute("itemprop","name");var l=document.createElement("img");l.src=a.logo,l.alt="Logo de ".concat(a.name),l.className="".concat(v,"-image"),l.setAttribute("itemprop","image");var p=document.createElement("strong");p.className="".concat(v,"-name");var d=a.name.split(" "),h=d[0]||"",y=d.length>1?d[1]:"";if(p.textContent=h,y&&y.length>0){var m=document.createElement("span");m.textContent=y,p.appendChild(m)}Array.isArray(a.color)&&a.color.length>=2?(p.style.backgroundImage="linear-gradient(130deg, ".concat(a.color[0]," 30%, ").concat(a.color[1]," 65%, ").concat(a.color[2]," 100%)"),p.style.color="rgb(".concat(r,")")):(p.style.backgroundColor=a.color,p.style.color=a.color_light?"rgb(".concat(r,")"):""),c.appendChild(p),c.appendChild(f),c.appendChild(l),s.appendChild(c),te.appendChild(s),!n&&localStorage.removeItem("main_station")}}):console.error("❌ stations vacío o no existe")}(we,be,ge,he,Oe)}window.addEventListener("DOMContentLoaded",function(){return xe.apply(this,arguments)})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,